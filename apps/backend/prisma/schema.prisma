// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id           String @id @default(cuid())
  username     String @unique
  password     String
  role         ROLE
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  teacherRooms Room[] @relation("TeacherRooms")
  pollResponses PollResponse[]
  roomParticipants RoomParticipant[]
}

model Room {
  id          String @id @default(cuid())
  roomCode    Int 
  title       String
  description String?
  teacherId   String
  teacher     User   @relation("TeacherRooms", fields: [teacherId], references: [id])
  isActive    Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  polls       Poll[]
  participants RoomParticipant[]
}

model Poll {
  id          String @id @default(cuid())
  question    String
  options     String[] // Array of poll options
  correctOption String
  roomId      String
  room        Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)
  isActive    Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  responses   PollResponse[]
}

model PollResponse {
  id        String @id @default(cuid())
  pollId    String
  poll      Poll   @relation(fields: [pollId], references: [id], onDelete: Cascade)
  userId    String
  user      User   @relation(fields: [userId], references: [id])
  option    String
  createdAt DateTime @default(now())
}

model RoomParticipant {
  id        String @id @default(cuid())
  roomId    String
  room      Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)
  userId    String
  user      User   @relation(fields: [userId], references: [id])
  joinedAt  DateTime @default(now())
  
  @@unique([roomId, userId])
}

enum ROLE {
  STUDENT
  TEACHER
  ADMIN
}